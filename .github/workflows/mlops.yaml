name: MLOps

on:
  # Runs on pushes targeting the main branch
  push:
    branches:
      - main

  # Runs on pull requests
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  train-and-report:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup SSH for private repo access
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts

      # Step 3: Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip

      # Step 4: Install dependencies (this triggers git clone)
      - name: Install dependencies
        run: pip install --requirement requirements-freeze.txt

      # Step 5: Authenticate with Google Cloud (if needed for DVC)
      - name: Login to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}'

      # Step 6: Train the model using DVC
      - name: Train model
        run: dvc repro --pull

      # Step 7: Generate and publish CML report
      - name: Setup CML
        if: github.event_name == 'pull_request'
        uses: iterative/setup-cml@v2
        with:
          version: '0.20.0'

      - name: Create CML report
        if: github.event_name == 'pull_request'
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch other Git branches
          git fetch --depth=1 origin main:main

          # Generate report
          echo "# Experiment Report (${{ github.sha }})" >> report.md
          dvc params diff main --md >> report.md
          dvc metrics diff main --md >> report.md
          dvc plots diff main
          cml comment update --target=pr --publish report.md
